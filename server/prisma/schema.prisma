// schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  CUSTOMER
  ADMIN
  SUPER_ADMIN
}

model User {
  id       String    @id @default(uuid()) @db.Uuid
  name     String
  email    String    @unique
  password String
  phone    String?
  address  String?
  role     UserRole  @default(CUSTOMER)
  bookings Booking[]
  shop     Shop?     @relation("ShopAdmin")
  shopId   String?   @db.Uuid
  vehicles Vehicle[] @relation("VehicleAdmin")

  otp            String?
  otpExpiresAt   DateTime? 
  otpAttempts    Int       @default(0)
  blacklisted    Boolean   @default(false)
  blacklistUntil DateTime? 
  verified       Boolean   @default(false) 
}

model Vehicle {
  id                 String    @id @default(uuid()) @db.Uuid
  registrationNumber String    @unique
  bookedStatus       Boolean   @default(false)
  bookings           Booking[]
  model              Model     @relation(fields: [modelId], references: [id])
  modelId            String    @db.Uuid
  admin              User      @relation("VehicleAdmin", fields: [adminId], references: [id])
  adminId            String    @db.Uuid
  Shop               Shop?     @relation(fields: [shopId], references: [id])
  shopId             String?   @db.Uuid
}

model Brand {
  id     String  @id @default(uuid()) @db.Uuid
  name   String  @unique
  models Model[]
}

model Model {
  id       String    @id @default(uuid()) @db.Uuid
  name     String
  brand    Brand     @relation(fields: [brandId], references: [id])
  brandId  String    @db.Uuid
  vehicles Vehicle[]
}

model Shop {
  id          String    @id @default(uuid()) @db.Uuid
  name        String
  description String
  admin       User      @relation("ShopAdmin", fields: [userId], references: [id]) // Define the relation here
  address     String
  vehicles    Vehicle[]
  userId      String    @unique @db.Uuid
}

model Booking {
  id         String   @id @default(uuid()) @db.Uuid
  bookedFrom DateTime
  bookedTo   DateTime
  status     String
  vehicle    Vehicle  @relation(fields: [vehicleId], references: [id])
  vehicleId  String   @db.Uuid
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.Uuid
}
